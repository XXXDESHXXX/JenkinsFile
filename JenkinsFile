pipeline {
    agent any
    
    environment {
        DOCKER_HUB_USERNAME = "xxxdeshxxx"
        DOCKER_HUB_PASSWORD = "dckr_pat_35qTkJ-d_a2wOqKDY49HK0JarEw"
    }

    stages {
        stage('Login to Docker Hub') {
            steps {
                script {
                    
                    sh 'echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin'
                }
            }
        }

        stage('Pull Apache Image from Docker Hub') {
            steps {
                script {
                    
                    sh 'docker pull xxxdeshxxx/custom-apache'
                }
            }
        }

        stage('Run Apache Container') {
            steps {
                script {
                    
                    sh '''
                    docker stop custom-apache || true
                    docker rm custom-apache || true
                    docker run -d --name custom-apache --network my_network -p 8083:8083 xxxdeshxxx/custom-apache
                    '''
                }
            }
        }

        stage('Push Apache Image to Docker Hub') {
            steps {
                script {
                    
                    sh 'docker push xxxdeshxxx/custom-apache'
                }
            }
        }
        stage('Pull Nginx Image from Docker Hub') {
            steps {
                script {
                    
                    sh 'docker pull xxxdeshxxx/custom-nginx'
                }
            }
        }

        stage('Push Nginx Image to Docker Hub') {
            steps {
                script {
                    
                    sh 'docker push xxxdeshxxx/custom-nginx'
                }
            }
        }

        stage('Run Nginx Container') {
            steps {
                script {
                    
                    sh '''
                    docker stop custom-nginx || true
                    docker rm custom-nginx || true
                    docker run -d --name custom-nginx --network my_network -p 80:80 xxxdeshxxx/custom-nginx
                    '''
                }
            }
        }

        stage('Cleanup Old Docker Images') {
            steps {
                script {
                    sh 'docker image prune -f'
                }
            }
        }
    }
}
